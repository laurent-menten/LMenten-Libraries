/* This file was generated by SableCC (http://www.sablecc.org/). */

package be.lmenten.utils.math.evaluator.grammar.parser;

import be.lmenten.utils.math.evaluator.grammar.node.*;
import be.lmenten.utils.math.evaluator.grammar.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTOpMultiply(@SuppressWarnings("unused") TOpMultiply node)
    {
        this.index = 0;
    }

    @Override
    public void caseTOpDivide(@SuppressWarnings("unused") TOpDivide node)
    {
        this.index = 1;
    }

    @Override
    public void caseTOpModulo(@SuppressWarnings("unused") TOpModulo node)
    {
        this.index = 2;
    }

    @Override
    public void caseTOpPlus(@SuppressWarnings("unused") TOpPlus node)
    {
        this.index = 3;
    }

    @Override
    public void caseTOpMinus(@SuppressWarnings("unused") TOpMinus node)
    {
        this.index = 4;
    }

    @Override
    public void caseTOpEqual(@SuppressWarnings("unused") TOpEqual node)
    {
        this.index = 5;
    }

    @Override
    public void caseTOpNotEqual(@SuppressWarnings("unused") TOpNotEqual node)
    {
        this.index = 6;
    }

    @Override
    public void caseTOpLThan(@SuppressWarnings("unused") TOpLThan node)
    {
        this.index = 7;
    }

    @Override
    public void caseTOpLEqual(@SuppressWarnings("unused") TOpLEqual node)
    {
        this.index = 8;
    }

    @Override
    public void caseTOpGThan(@SuppressWarnings("unused") TOpGThan node)
    {
        this.index = 9;
    }

    @Override
    public void caseTOpGEqual(@SuppressWarnings("unused") TOpGEqual node)
    {
        this.index = 10;
    }

    @Override
    public void caseTOpAnd(@SuppressWarnings("unused") TOpAnd node)
    {
        this.index = 11;
    }

    @Override
    public void caseTOpOr(@SuppressWarnings("unused") TOpOr node)
    {
        this.index = 12;
    }

    @Override
    public void caseTOpXor(@SuppressWarnings("unused") TOpXor node)
    {
        this.index = 13;
    }

    @Override
    public void caseTOpAssign(@SuppressWarnings("unused") TOpAssign node)
    {
        this.index = 14;
    }

    @Override
    public void caseTLPar(@SuppressWarnings("unused") TLPar node)
    {
        this.index = 15;
    }

    @Override
    public void caseTRPar(@SuppressWarnings("unused") TRPar node)
    {
        this.index = 16;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 17;
    }

    @Override
    public void caseTInteger2(@SuppressWarnings("unused") TInteger2 node)
    {
        this.index = 18;
    }

    @Override
    public void caseTInteger8(@SuppressWarnings("unused") TInteger8 node)
    {
        this.index = 19;
    }

    @Override
    public void caseTInteger10(@SuppressWarnings("unused") TInteger10 node)
    {
        this.index = 20;
    }

    @Override
    public void caseTInteger16(@SuppressWarnings("unused") TInteger16 node)
    {
        this.index = 21;
    }

    @Override
    public void caseTFloat(@SuppressWarnings("unused") TFloat node)
    {
        this.index = 22;
    }

    @Override
    public void caseTFraction(@SuppressWarnings("unused") TFraction node)
    {
        this.index = 23;
    }

    @Override
    public void caseTIdentifier(@SuppressWarnings("unused") TIdentifier node)
    {
        this.index = 24;
    }

    @Override
    public void caseTObjIdentifier(@SuppressWarnings("unused") TObjIdentifier node)
    {
        this.index = 25;
    }

    @Override
    public void caseTConst(@SuppressWarnings("unused") TConst node)
    {
        this.index = 26;
    }

    @Override
    public void caseTVar(@SuppressWarnings("unused") TVar node)
    {
        this.index = 27;
    }

    @Override
    public void caseTDelete(@SuppressWarnings("unused") TDelete node)
    {
        this.index = 28;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 29;
    }
}
